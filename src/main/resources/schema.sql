CREATE TABLE IF NOT EXISTS public.users(
        user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        email varchar(255) NOT NULL,
        login  varchar(255) NOT NULL,
        name varchar(255),
        birthday date
);

CREATE TABLE IF NOT EXISTS public.genres(
        genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.ratings(
        rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        rating_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.directors(
        director_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        director_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.films(
        film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name varchar(255) NOT NULL,
        description  varchar(1024),
        release_date date NOT NULL,
        duration integer NOT NULL,
        likes_count integer,
        rating_id integer NOT NULL REFERENCES ratings(rating_id) 
);


CREATE TABLE IF NOT EXISTS public.film_genre(
		film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE,
        genre_id INTEGER NOT NULL REFERENCES genres(genre_id)
);

CREATE TABLE IF NOT EXISTS public.film_director(
		film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE,
        director_id INTEGER NOT NULL REFERENCES directors(director_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public.likes(
		user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
        film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public.friendship(
		user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
        friend_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public.reviews(
    review_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content TEXT,
    is_positive BOOLEAN,
    user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE,
    useful INTEGER NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS public.events(
    event_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_type VARCHAR(50),
    operation VARCHAR(50),
    entity_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    timestamp BIGINT
);